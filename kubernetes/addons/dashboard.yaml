apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: kubernetes-dashboard-v1.5.1
  namespace: kube-system
  labels:
    app: kubernetes-dashboard
    kubernetes.io/cluster-service: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kubernetes-dashboard
  template:
    metadata:
      labels:
        app: kubernetes-dashboard
        version: v1.5.1
        kubernetes.io/cluster-service: "true"
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''
        scheduler.alpha.kubernetes.io/tolerations: '[{"key":"CriticalAddonsOnly", "operator":"Exists"}]'
    spec:
      hostNetwork: true
      containers:
      - name: kubernetes-dashboard
        image: gcr.io/google_containers/kubernetes-dashboard-amd64:v1.6.0
        resources:
          # keep request = limit to keep this container in guaranteed class
          limits:
            cpu: 100m
            memory: 50Mi
          requests:
            cpu: 100m
            memory: 50Mi
        ports:
        - containerPort: 9090
        livenessProbe:
          httpGet:
            path: /
            port: 9090
          initialDelaySeconds: 30
          timeoutSeconds: 30
        args:
          # Uncomment the following line to manually specify Kubernetes API server Host
          # If not specified, Dashboard will attempt to auto discover the API server and connect
          # to it. Uncomment only if the default does not work.
          - --apiserver-host=https://10.0.0.1:443
          - --kubeconfig=/etc/kubernetes/ssl/kube.conf
        volumeMounts:
        - name: kubernetes-etc
          mountPath: /etc/kubernetes/ssl
          readOnly: true
      volumes:
      - name: kubernetes-etc
        hostPath:
          path: /opt/kubernetes/ssl
---
apiVersion: v1
kind: Service
metadata:
  name: kubernetes-dashboard
  namespace: kube-system
  labels:
    app: kubernetes-dashboard
    kubernetes.io/cluster-service: "true"
spec:
  selector:
    app: kubernetes-dashboard
  ports:
  - port: 80
    targetPort: 9090
